{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"next/router\";\naxios.defaults.withCredentials = true;\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__user__\";\nexport const loginUser = async (email, password) => {\n  const {\n    data\n  } = await axios.post(\"/api/login\", {\n    email,\n    password\n  });\n\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n\n  console.log(data);\n};\nexport const getUserProfile = async (email, password) => {\n  const {\n    data\n  } = await axios.get(\"/api/profile\");\n  return data;\n};\nexport const getServerSideToken = req => {\n  const {\n    signedCookies = {}\n  } = req;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport const getClientSideToken = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n}; // Higher Order Function\n\nexport const authInitialProps = isProtectedRoute => ({\n  req,\n  res\n}) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return _redirectUser(res, \"/login\");\n  }\n\n  return {\n    auth\n  };\n};\n\nconst _redirectUser = (res, path) => {\n  // Server side redirect for hard loaded deep linked page\n  if (res) {\n    res.redirect(302, path); // sending 302 error code is important for SEO\n\n    res.finished = true; // tells next not to keep redirecting or something\n\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport const logoutUser = async () => {\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n\n  await axios.post(\"/api/logout\");\n  Router.push(\"/login\");\n};","map":{"version":3,"sources":["/Users/isajal07/Desktop/Web/NextjsPractise/next-auth/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","WINDOW_USER_SCRIPT_VARIABLE","loginUser","email","password","data","post","window","console","log","getUserProfile","get","getServerSideToken","req","signedCookies","token","user","getClientSideToken","getUserScript","JSON","stringify","authInitialProps","isProtectedRoute","res","auth","currentPath","url","location","pathname","isAnonymous","type","_redirectUser","path","redirect","finished","replace","logoutUser","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\naxios.defaults.withCredentials = true;\n\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__user__\";\n\nexport const loginUser = async (email, password) => {\n  const { data } = await axios.post(\"/api/login\", {\n    email,\n    password\n  });\n\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n\n  console.log(data);\n};\n\nexport const getUserProfile = async (email, password) => {\n  const { data } = await axios.get(\"/api/profile\");\n  return data;\n};\n\nexport const getServerSideToken = req => {\n  const { signedCookies = {} } = req;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return { user: signedCookies.token };\n};\n\nexport const getClientSideToken = () => {\n  if (typeof window !== \"undefined\") {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return { user };\n  }\n  return { user: {} };\n};\n\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\n\n// Higher Order Function\nexport const authInitialProps = isProtectedRoute => ({ req, res }) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return _redirectUser(res, \"/login\");\n  }\n\n  return { auth };\n};\n\nconst _redirectUser = (res, path) => {\n  // Server side redirect for hard loaded deep linked page\n  if (res) {\n    res.redirect(302, path); // sending 302 error code is important for SEO\n    res.finished = true; // tells next not to keep redirecting or something\n    return {};\n  }\n\n  Router.replace(path);\n\n  return {};\n};\n\nexport const logoutUser = async () => {\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n  await axios.post(\"/api/logout\");\n  Router.push(\"/login\");\n};"]},"metadata":{},"sourceType":"module"}