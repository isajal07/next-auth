{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\naxios.defaults.withCredentials = true;\nvar WINDOW_USER_SCRIPT_VARIABLE = \"__user__\";\nexport var loginUser = function loginUser(email, password) {\n  var _ref, data;\n\n  return _regeneratorRuntime.async(function loginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/login\", {\n            email: email,\n            password: password\n          }));\n\n        case 2:\n          _ref = _context.sent;\n          data = _ref.data;\n\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n          }\n\n          console.log(data);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getUserProfile = function getUserProfile(email, password) {\n  var _ref2, data;\n\n  return _regeneratorRuntime.async(function getUserProfile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"/api/profile\"));\n\n        case 2:\n          _ref2 = _context2.sent;\n          data = _ref2.data;\n          return _context2.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getServerSideToken = function getServerSideToken(req) {\n  var _req$signedCookies = req.signedCookies,\n      signedCookies = _req$signedCookies === void 0 ? {} : _req$signedCookies;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport var getClientSideToken = function getClientSideToken() {\n  if (true) {\n    var user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user: user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nexport var getUserScript = function getUserScript(user) {\n  return \"\".concat(WINDOW_USER_SCRIPT_VARIABLE, \" = \").concat(_JSON$stringify(user), \";\");\n}; // Higher Order Function\n\nexport var authInitialProps = function authInitialProps(isProtectedRoute) {\n  return function (_ref3) {\n    var req = _ref3.req,\n        res = _ref3.res;\n    var auth = req ? getServerSideToken(req) : getClientSideToken();\n    var currentPath = req ? req.url : window.location.pathname;\n    var user = auth.user;\n    var isAnonymous = !user || user.type !== \"authenticated\";\n\n    if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n      return _redirectUser(res, \"/login\");\n    }\n\n    return {\n      auth: auth\n    };\n  };\n};\n\nvar _redirectUser = function _redirectUser(res, path) {\n  // Server side redirect for hard loaded deep linked page\n  if (res) {\n    res.redirect(302, path); // sending 302 error code is important for SEO\n\n    res.finished = true; // tells next not to keep redirecting or something\n\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport var logoutUser = function logoutUser() {\n  return _regeneratorRuntime.async(function logoutUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n          }\n\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/logout\"));\n\n        case 3:\n          Router.push(\"/login\");\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/isajal07/Desktop/Web/NextjsPractise/next-auth/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","WINDOW_USER_SCRIPT_VARIABLE","loginUser","email","password","post","data","window","console","log","getUserProfile","get","getServerSideToken","req","signedCookies","token","user","getClientSideToken","getUserScript","authInitialProps","isProtectedRoute","res","auth","currentPath","url","location","pathname","isAnonymous","type","_redirectUser","path","redirect","finished","replace","logoutUser","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\naxios.defaults.withCredentials = true;\n\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__user__\";\n\nexport const loginUser = async (email, password) => {\n  const { data } = await axios.post(\"/api/login\", {\n    email,\n    password\n  });\n\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n\n  console.log(data);\n};\n\nexport const getUserProfile = async (email, password) => {\n  const { data } = await axios.get(\"/api/profile\");\n  return data;\n};\n\nexport const getServerSideToken = req => {\n  const { signedCookies = {} } = req;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return { user: signedCookies.token };\n};\n\nexport const getClientSideToken = () => {\n  if (typeof window !== \"undefined\") {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return { user };\n  }\n  return { user: {} };\n};\n\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\n\n// Higher Order Function\nexport const authInitialProps = isProtectedRoute => ({ req, res }) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return _redirectUser(res, \"/login\");\n  }\n\n  return { auth };\n};\n\nconst _redirectUser = (res, path) => {\n  // Server side redirect for hard loaded deep linked page\n  if (res) {\n    res.redirect(302, path); // sending 302 error code is important for SEO\n    res.finished = true; // tells next not to keep redirecting or something\n    return {};\n  }\n\n  Router.replace(path);\n\n  return {};\n};\n\nexport const logoutUser = async () => {\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n  await axios.post(\"/api/logout\");\n  Router.push(\"/login\");\n};"]},"metadata":{},"sourceType":"module"}